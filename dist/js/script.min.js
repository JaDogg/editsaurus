{"version":3,"sources":["script.js"],"names":["angular","module","directive","$timeout","$filter","$sce","link","$scope","$element","$attrs","replaceStyleAttr","str","replace","a","b","c","d","removeAllTags","timer","selectedChecks","output","input","element","querySelector","toggleCheck","check","index","indexOf","splice","updateOutput","push","trustAsHtml","html","processText","cancel","on","restrict","currentDefinition","filter","choices","checkOptions","adverb","name","regex","title","fillerWords","passiveVoice","lexicalIllusions","misusedWords","pronoun","re","i","max","length","RegExp"],"mappings":"AAGAA,QAAQC,OAAO,cACb,eAGFD,QAAQC,OAAO,cACZC,UAAU,aAAc,WAAY,UAAW,OAAQ,SAAUC,EAAUC,EAASC,GACnF,QAASC,GAAKC,EAAQC,EAAUC,GAC9B,YAqCA,SAASC,GAAkBC,GACzB,MAAOA,GAAIC,QAAQ,iCAAkC,SAAUC,EAAGC,EAAGC,EAAGC,GACtE,MAAOF,GAAI,gBAAkBE,IAIjC,QAASC,GAAeN,GACtB,MAAOA,GAAIC,QAAQ,4BAA4B,IA1CjD,GAAIM,EAEJX,GAAOY,gBAAkB,SAAU,cAAe,eAAgB,oBAClEZ,EAAOa,OAAS,yCAChBb,EAAOc,MAAQrB,QAAQsB,QAAQd,EAAS,GAAGe,cAAc,yBAEzDhB,EAAOiB,YAAc,SAAUC,GAC7B,GAAIC,GAAQnB,EAAOY,eAAeQ,QAAQF,EAEtCC,SACFnB,EAAOY,eAAeS,OAAOF,EAAO,GACpCnB,EAAOsB,iBAEPtB,EAAOY,eAAeW,KAAKL,GAC3BlB,EAAOsB,iBAIXtB,EAAOsB,aAAe,WACpBtB,EAAOa,OAASf,EAAK0B,YAAY3B,EAAQ,iBAAiBG,EAAOc,MAAMW,OAAQzB,EAAOY,kBAGxFZ,EAAO0B,YAAc,WACnB9B,EAAS+B,OAAOhB,GAChBA,EAAQf,EAAS,WACfI,EAAOsB,gBACN,MAGLtB,EAAOc,MAAMc,GAAG,QAAS,WACvBhC,EAAS,WACPI,EAAOc,MAAMW,KAAKtB,EAAiBO,EAAcV,EAAOc,MAAMW,WAC7D,KAcP,OACEI,SAAU,IACV9B,KAAMA,MAITJ,UAAU,kBAAmB,WAC5B,QAASI,GAAKC,EAAQC,EAAUC,GAC9B,YAEAF,GAAO8B,kBAAoB,SAG7B,OACED,SAAU,IACV9B,KAAMA,MAITgC,OAAO,iBAAkB,WACxB,MAAO,UAAUjB,EAAOkB,GACtB,YAEA,IAAIC,IACFC,QACEC,KAAM,SACNC,MAAO,mtCACPC,MAAO,kEAETC,aACEH,KAAM,eACNC,MAAO,gHACPC,MAAO,+DAETE,cACEJ,KAAM,gBACNC,MAAO,gzBACPC,MAAO,oFAETG,kBACEL,KAAM,oBACNC,MAAO,qBACPC,MAAO,wFAETI,cACEN,KAAM,gBACNC,MAAO,gTACPC,MAAO,2FAETK,SACEP,KAAM,UACNC,MAAO,4CACPC,MAAO,8GAIX,KAAKvB,EACH,MAAO,wCAITA,GAAQ,MAAQA,EAAMT,QAAQ,uBAAwB,WAAa,OAEnES,EAAQA,EAAMT,QAAQ,SAAU,OAChC,IAEEsC,GAFEC,EAAI,EACNC,EAAMb,EAAQc,MAGhB,KAAKF,EAAI,EAAGA,EAAIC,EAAKD,IAEnB9B,EAAQA,EAAMT,QAAQ4B,EAAaD,EAAQY,IAAIR,MAAO,gBAAkBH,EAAaD,EAAQY,IAAIT,KAAO,cAI1G,KAAKS,EAAI,EAAGA,EAAIC,EAAKD,IAEnBD,EAAK,GAAII,QAAO,gBAAkBd,EAAaD,EAAQY,IAAIT,KAAO,KAAM,KAExErB,EAAQA,EAAMT,QAAQsC,EAAI,gBAAkBV,EAAaD,EAAQY,IAAIT,KAAO,mBAAqBF,EAAaD,EAAQY,IAAIP,MAAQ,KAGpI,OAAOvB","file":"script.js","sourcesContent":["/* global angular */\n/* global console */\n\nangular.module('editSaurus', [\n  'ngSanitize'\n]);\n\nangular.module('editSaurus')\n  .directive('checkText', ['$timeout', '$filter', '$sce', function ($timeout, $filter, $sce) {\n    function link($scope, $element, $attrs) {\n      'use strict';\n\n      var timer;\n\n      $scope.selectedChecks = ['adverb', 'fillerWords', 'passiveVoice', 'lexicalIllusions'];\n      $scope.output = '<p>Checked text copy will go here.</p>';\n      $scope.input = angular.element($element[0].querySelector('#writing-check-input'));\n\n      $scope.toggleCheck = function (check) {\n        var index = $scope.selectedChecks.indexOf(check);\n\n        if (index !== -1) {\n          $scope.selectedChecks.splice(index, 1);\n          $scope.updateOutput();\n        } else {\n          $scope.selectedChecks.push(check);\n          $scope.updateOutput();\n        }\n      };\n\n      $scope.updateOutput = function () {\n        $scope.output = $sce.trustAsHtml($filter('highlightText')($scope.input.html(), $scope.selectedChecks));\n      };\n\n      $scope.processText = function () {\n        $timeout.cancel(timer);\n        timer = $timeout(function () {\n          $scope.updateOutput();\n        }, 200);\n      };\n\n      $scope.input.on('paste', function() {\n        $timeout(function () {\n          $scope.input.html(replaceStyleAttr(removeAllTags($scope.input.html())));\n        }, 0);\n      });\n\n      function replaceStyleAttr (str) {\n        return str.replace(/(<[\\w\\W]*?)(style)([\\w\\W]*?>)/g, function (a, b, c, d) {\n          return b + 'style_replace' + d;\n        });\n      }\n\n      function removeAllTags (str) {\n        return str.replace(/<(?!\\s*\\/?\\s*p\\b)[^>]*>/gi,'');\n      }\n    }\n\n    return {\n      restrict: 'A',\n      link: link\n    };\n  }])\n\n  .directive('definitionList', [function () {\n    function link($scope, $element, $attrs) {\n      'use strict';\n\n      $scope.currentDefinition = 'adverb';\n    }\n\n    return {\n      restrict: 'A',\n      link: link\n    };\n  }])\n\n  .filter('highlightText', [function () {\n    return function (input, choices) {\n      'use strict';\n\n      var checkOptions = {\n        adverb: {\n          name: 'adverb',\n          regex: /(?!ally|anomaly|assembly|belly|bully|dolly|doily|family|fly|gully|hillbilly|holly|homily|jelly|lily|monopoly|panoply|potbelly|rally|reply|supply|tally|underbelly|barfly|blowfly|botfly|butterfly|dragonfly|firefly|gadfly|horsefly|mayfly|medfly|apply|bely|comply|dally|imply|multiply|outfly|ply|rely|reply|supply|authorly|beastly|brotherly|cowardly|fatherly|gentlemanly|granddaughterly|housekeeperly|husbandly|kingly|landlordly|manly|marksmanly|matronly|miserly|motherly|neighborly|queenly|saintly|scholarly|southerly|wifely|womanly|daily|easterly|hourly|monthly|nightly|northeasterly|northerly|northwesterly|quarterly|rarely|timely|weekly|westerly|wobbly|yearly|bristly|bubbly|crinkly|crumbly|crumply|cuddly|curly|frizzly|giggly|rumply|smelly|sparkly|wriggly|wrinkly|bodily|burly|chilly|comely|costly|courtly|dastardly|deadly|deathly|disorderly|early|frilly|friendly|ghastly|goodly|gravelly|grisly|heavanly|hilly|holy|homely|jolly|kindly|knurly|leisurely|likely|lively|lonely|lovely|lowly|mannerly|mealy|measly|melancholy|oily|only|orderly|otherworldly|pearly|pebbly|pimply|scaly|shapely|sickly|silly|slatternly|slovenly|sly|spindly|sprightly|squiggly|stately|steely|surly|treacly|ugly|ungainly|unlikely|wily|wooly|worldly)\\b\\w*ly\\b/gi,\n          title: 'This adverb could be omitted or replaced with a stronger verb.'\n        },\n        fillerWords: {\n          name: 'filler-words',\n          regex: /\\b(very|several|some|many|most|few|vast|just|quite|often|various|a number of|really|so|that|and then|but)\\b/gi,\n          title: 'This word may be unnecessary and not add anything of value.'\n        },\n        passiveVoice: {\n          name: 'passive-voice',\n          regex: /\\b(is|isn't|are|aren't|am|am not|was|wasn't|were|weren't|had|hadn't|has been|have been|had been|will be|being)\\b\\s+\\b(\\w*ed|arisen|babysat|been|beaten|become|bent|begun|bet|bound|bitten|bled|blown|broken|bred|brought|broadcast|built|bought|caught|chosen|come|cost|cut|dealt|dug|done|drawn|drunk|driven|eaten|fallen|fed|felt|fought|found|flown|forbidden|forgotten|forgiven|frozen|gotten|given|gone|grown|hung|had|heard|hidden|hit|held|hurt|kept|known|laid|led|left|lent|let|lain|lit|lost|made|meant|met|paid|put|quit|read|ridden|rung|risen|run|said|seen|sold|sent|set|shaken|shone|shot|shown|shut|sung|sunk|sat|slept|slid|spoken|spent|spun|spread|stood|stolen|stuck|stung|struck|sworn|swept|swum|swung|taken|taught|torn|told|thought|thrown|understood|woken|worn|won|withdrawn|written|burnt|dreamt|learnt|smelt)\\b/gi,\n          title: 'This may be an instance of passive voice. Consider an active sentence structure.'\n        },\n        lexicalIllusions: {\n          name: 'lexical-illusions',\n          regex: /\\b(\\w+)\\b\\s+\\1\\b/gi,\n          title: 'This may be a lexical illusion. Double check that the repeated word was intentional.'\n        },\n        misusedWords: {\n          name: 'misused-words',\n          regex: /\\b(their|they're|there|your|you're|its|it's|whose|who's|accept|except|affect|effect|allusion|illusion|capital|capitol|climactic|climatic|elicit|illicit|emigrate|immigrate|principle|principal|than|then|to|too|two|lie|lay|set|sit|suppose to|use to|towards|anyways|could care less|intensive purposes)\\b/gi,\n          title: 'This word is commonly mistaken for another. Double check that the correct word is used.'\n        },\n        pronoun: {\n          name: 'pronoun',\n          regex: /\\b(he|she|it|they|we|you|I|that|this)\\b/gi,\n          title: 'Double check that it is clear what this pronoun refers to and that you don\\'t have too many close together.'\n        }\n      };\n\n      if (!input) {\n        return '<p>Checked text copy will go here.</p>';\n      }\n\n      // Creates paragraphs where line breaks occur in the submitted text\n      input = '<p>' + input.replace(/\\r\\n|\\n\\r|\\n\\n|\\r\\r/g, '</p><p>') + '</p>';\n      // Creates paragraphs where line breaks occur in the submitted text\n      input = input.replace(/\\r|\\n/g, '<br>');\n      var i = 0,\n        max = choices.length,\n        re;\n      // Loops through the selected check options to apply each one to the submitted text\n      for (i = 0; i < max; i++) {\n        // Wraps each match with a span tag and a class\n        input = input.replace(checkOptions[choices[i]].regex, '<span class=\"' + checkOptions[choices[i]].name + '\">$&</span>');\n      }\n\n      // Loops through text to add titles to each match. It is handled this way to avoid incorrectly finding matches in the title text.\n      for (i = 0; i < max; i++) {\n        // Regular expression to look for spans and classes for each check\n        re = new RegExp('<span class=\"' + checkOptions[choices[i]].name + '\">', 'g');\n        // Adds titles in addition to classes to each span tag\n        input = input.replace(re, '<span class=\"' + checkOptions[choices[i]].name + '\" data-tooltip=\"' + checkOptions[choices[i]].title + '\">');\n      }\n      // Returns edited text for output\n      return input;\n    };\n  }])\n;\n\n"]}
angular.module("editSaurus",["ngSanitize"]),angular.module("editSaurus").directive("checkText",["$timeout","$filter","$sce",function(e,l,t){function n(n,r,i){"use strict";function a(e){return e.replace(/(<[\w\W]*?)(style)([\w\W]*?>)/g,function(e,l,t,n){return l+"style_replace"+n})}function o(e){return e.replace(/<(?!\s*\/?\s*p\b)[^>]*>/gi,"")}var s;n.selectedChecks=["adverb","fillerWords","passiveVoice","lexicalIllusions"],n.output="<p>Checked text copy will go here.</p>",n.input=angular.element(r[0].querySelector("#writing-check-input")),n.toggleCheck=function(e){var l=n.selectedChecks.indexOf(e);l!==-1?(n.selectedChecks.splice(l,1),n.updateOutput()):(n.selectedChecks.push(e),n.updateOutput())},n.updateOutput=function(){n.output=t.trustAsHtml(l("highlightText")(n.input.html(),n.selectedChecks))},n.processText=function(){e.cancel(s),s=e(function(){n.updateOutput()},200)},n.input.on("paste",function(){e(function(){n.input.html(a(o(n.input.html())))},0)})}return{restrict:"A",link:n}}]).directive("definitionList",[function(){function e(e,l,t){"use strict";e.currentDefinition="adverb"}return{restrict:"A",link:e}}]).filter("highlightText",[function(){return function(e,l){"use strict";var t={adverb:{name:"adverb",regex:/(?!ally|anomaly|assembly|belly|bully|dolly|doily|family|fly|gully|hillbilly|holly|homily|jelly|lily|monopoly|panoply|potbelly|rally|reply|supply|tally|underbelly|barfly|blowfly|botfly|butterfly|dragonfly|firefly|gadfly|horsefly|mayfly|medfly|apply|bely|comply|dally|imply|multiply|outfly|ply|rely|reply|supply|authorly|beastly|brotherly|cowardly|fatherly|gentlemanly|granddaughterly|housekeeperly|husbandly|kingly|landlordly|manly|marksmanly|matronly|miserly|motherly|neighborly|queenly|saintly|scholarly|southerly|wifely|womanly|daily|easterly|hourly|monthly|nightly|northeasterly|northerly|northwesterly|quarterly|rarely|timely|weekly|westerly|wobbly|yearly|bristly|bubbly|crinkly|crumbly|crumply|cuddly|curly|frizzly|giggly|rumply|smelly|sparkly|wriggly|wrinkly|bodily|burly|chilly|comely|costly|courtly|dastardly|deadly|deathly|disorderly|early|frilly|friendly|ghastly|goodly|gravelly|grisly|heavanly|hilly|holy|homely|jolly|kindly|knurly|leisurely|likely|lively|lonely|lovely|lowly|mannerly|mealy|measly|melancholy|oily|only|orderly|otherworldly|pearly|pebbly|pimply|scaly|shapely|sickly|silly|slatternly|slovenly|sly|spindly|sprightly|squiggly|stately|steely|surly|treacly|ugly|ungainly|unlikely|wily|wooly|worldly)\b\w*ly\b/gi,title:"This adverb could be omitted or replaced with a stronger verb."},fillerWords:{name:"filler-words",regex:/\b(very|several|some|many|most|few|vast|just|quite|often|various|a number of|really|so|that|and then|but)\b/gi,title:"This word may be unnecessary and not add anything of value."},passiveVoice:{name:"passive-voice",regex:/\b(is|isn't|are|aren't|am|am not|was|wasn't|were|weren't|had|hadn't|has been|have been|had been|will be|being)\b\s+\b(\w*ed|arisen|babysat|been|beaten|become|bent|begun|bet|bound|bitten|bled|blown|broken|bred|brought|broadcast|built|bought|caught|chosen|come|cost|cut|dealt|dug|done|drawn|drunk|driven|eaten|fallen|fed|felt|fought|found|flown|forbidden|forgotten|forgiven|frozen|gotten|given|gone|grown|hung|had|heard|hidden|hit|held|hurt|kept|known|laid|led|left|lent|let|lain|lit|lost|made|meant|met|paid|put|quit|read|ridden|rung|risen|run|said|seen|sold|sent|set|shaken|shone|shot|shown|shut|sung|sunk|sat|slept|slid|spoken|spent|spun|spread|stood|stolen|stuck|stung|struck|sworn|swept|swum|swung|taken|taught|torn|told|thought|thrown|understood|woken|worn|won|withdrawn|written|burnt|dreamt|learnt|smelt)\b/gi,title:"This may be an instance of passive voice. Consider an active sentence structure."},lexicalIllusions:{name:"lexical-illusions",regex:/\b(\w+)\b\s+\1\b/gi,title:"This may be a lexical illusion. Double check that the repeated word was intentional."},misusedWords:{name:"misused-words",regex:/\b(their|they're|there|your|you're|its|it's|whose|who's|accept|except|affect|effect|allusion|illusion|capital|capitol|climactic|climatic|elicit|illicit|emigrate|immigrate|principle|principal|than|then|to|too|two|lie|lay|set|sit|suppose to|use to|towards|anyways|could care less|intensive purposes)\b/gi,title:"This word is commonly mistaken for another. Double check that the correct word is used."},pronoun:{name:"pronoun",regex:/\b(he|she|it|they|we|you|I|that|this)\b/gi,title:"Double check that it is clear what this pronoun refers to and that you don't have too many close together."}};if(!e)return"<p>Checked text copy will go here.</p>";e="<p>"+e.replace(/\r\n|\n\r|\n\n|\r\r/g,"</p><p>")+"</p>",e=e.replace(/\r|\n/g,"<br>");var n,r=0,i=l.length;for(r=0;r<i;r++)e=e.replace(t[l[r]].regex,'<span class="'+t[l[r]].name+'">$&</span>');for(r=0;r<i;r++)n=new RegExp('<span class="'+t[l[r]].name+'">',"g"),e=e.replace(n,'<span class="'+t[l[r]].name+'" data-tooltip="'+t[l[r]].title+'">');return e}}]);
//# sourceMappingURL=script.js.map
